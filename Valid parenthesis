Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.An input string is valid if:Open brackets must be closed by the same type of brackets.Open brackets must be closed in the correct order.

Example 1:
Input: s = "()"
Output: true

Example 2:
Input: s = "()[]{}"
Output: true

Example 3:
Input: s = "(]"
Output: false

class Solution {
    public boolean isValid(String s) {
        Stack<Character> st = new Stack<Character>();
        boolean match = true;
        if(s.length()%2!=0)
            return false;
        for(int i=0;i<s.length() && match;i++) {
            if(st.empty() && (s.charAt(i)=='}' || s.charAt(i)==']' || s.charAt(i)==')'))
               return false;
            if(s.charAt(i) == '[' || s.charAt(i) == '{' || s.charAt(i) == '(')
                st.push(s.charAt(i));
            else if(s.charAt(i) == '}' && st.peek()== '{')
                st.pop();
            else if(s.charAt(i) == ']' && st.peek()== '[')
                st.pop();
            else if(s.charAt(i) == ')' && st.peek()== '(')
                st.pop();
            else
                match=false;
        }
        
        if(st.empty() && match)
            return true;
        else
            return false;
    }
}
